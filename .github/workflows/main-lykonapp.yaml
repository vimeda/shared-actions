on:
  workflow_call:
    inputs:
      role_name:
        required: true
        type: string
      role_session_name:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: eu-central-1
      working_directory:
        required: true
        type: string
      env:
        required: true
        type: string
      zip_lambda_workflow_step:
        required: true
        type: boolean
      commit_hash:
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 15


    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ inputs.role_name }}
          role-session-name: ${{ inputs.role_session_name }}
          aws-region: ${{ inputs.aws_region }}

      - name: patch claim image uri with commit hash
        id: patch_image_uri_with_commit_hash
        run: |
          find ./ -type f -name "*.yaml" -exec sed -i -e 's/COMMIT_HASH/${{ env.commit_hash }}/g' -e 's/ECR_BASE_URL/279707217826.dkr.ecr.eu-central-1.amazonaws.com\/lykon/g' {} \;
        env:
          TF_WORKSPACE: ${{ inputs.env }}
          commit_hash: ${{ inputs.commit_hash }}

      - name: Terraform apply
        id: apply
        run: |
          echo "${{ secrets.STAGING_KUBECONFIG }}" > ${{ github.workspace }}/kubeconfig.yaml
          export KUBECONFIG=${{ github.workspace }}/kubeconfig.yaml
           cd ${{ github.workspace }}/configs/crossplane && terraform init && terraform -chdir=${{ github.workspace }}/configs/crossplane apply -auto-approve
        env:
          TF_WORKSPACE: ${{ inputs.env }}

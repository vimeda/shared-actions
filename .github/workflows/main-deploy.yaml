on:
  workflow_call:
    inputs:
      role_name:
        required: true
        type: string
      role_session_name:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: eu-central-1
      release_name:
        required: true
        type: string
      namespace:
        required: true
        type: string
      helm_values:
        required: true
        type: string
      helm_values_files:
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write

jobs:
  publish:
    name: Publish to Staging
    runs-on: self-hosted
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '14'

    - uses: azure/setup-kubectl@v3
      id: install

    - name: Configure AWS Credentials
      id: aws
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ inputs.role_name }}
        role-session-name: ${{ inputs.role_session_name }}
        aws-region: ${{ inputs.aws_region }}

    - name: Create Parameters file
      run: echo '${{ inputs.helm_values }}' > parameters.json

    - name: Deploy
      uses: vimeda/helm@v1.7.0
      with:
        helm: helm3
        chart: lykon-charts/lykon-service
        chart-version: "0.12.14"
        track: stable
        version: ${{ github.sha }}
        token: ${{ github.token }}
        secrets: ${{ toJSON(secrets) }}
        value-files: '[
          ${{ inputs.helm_values_files }},
          "./parameters.json"]'
        repo: ${{ secrets.CHARTMUSEUM_REPO }}
        repo-alias: lykon-charts
        repo-username: ${{ secrets.CHARTMUSEUM_USERNAME }}
        repo-password: ${{ secrets.CHARTMUSEUM_PASSWORD }}
        release: ${{ inputs.release_name }}
        namespace: ${{ inputs.namespace }}
      env:
        KUBECONFIG_FILE: ${{ secrets.STAGING_KUBECONFIG }}

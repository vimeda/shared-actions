on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      service_name:
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write

jobs:
  crossplane-terraform:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      -
        name: Checkout shared-actions
        uses: actions/checkout@v4
        with:
          repository: vimeda/shared-actions
          path: ./scripts
          ref: feature/shared-crossplane
      -
        name: Checkout service
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          path: ./scripts/${{ inputs.service_name }}
      -
        name: Install yq
        uses: chrisdickinson/setup-yq@v1.0.1
        with:
          yq-version: v4.25.3
      -
        name: Install 1Password CLI
        uses: 1password/install-cli-action@v1
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-${{ inputs.service_name }}-role
          role-session-name: ga-${{ inputs.service_name }}
          aws-region: eu-central-1
      -
        name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.9

      -
        name: Terraform Init
        working-directory: ./scripts/crossplane
        run: |
          terraform init \
            -backend-config="region=eu-central-1" \
            -backend-config="bucket=terraform-eks" \
            -backend-config="key=crossplane/${{ inputs.service_name }}"

      -
        name: Terraform Validate
        working-directory: ./scripts/crossplane
        run: |
          terraform validate -no-color
      -
        name: Terraform
        working-directory: ./scripts/crossplane
        run: |
          echo "${{ secrets.STAGING_KUBECONFIG }}" > ${{ github.workspace }}/kubeconfig.yaml
          export KUBECONFIG=${{ github.workspace }}/kubeconfig.yaml
          terraform apply -auto-approve -no-color \
          -var-file=${{ inputs.environment }}.tfvars \
          -var="commit_hash=${{ github.sha }}" \
          -var="service_name=${{ inputs.service_name }}"
        env:
          TF_WORKSPACE: ${{ inputs.environment }}
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.STAGING_ONEPASSWORD_SERVICEACCOUNT_TOKEN }}


